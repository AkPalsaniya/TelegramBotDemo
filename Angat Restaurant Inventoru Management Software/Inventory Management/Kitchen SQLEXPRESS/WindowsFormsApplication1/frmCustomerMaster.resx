<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAACABoBQAAJgAAACAgAAAAACAAqBAAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAO05xADNYiwA0VocAN1B5ADdbkAA5XZMAOWGcADxjnABFQlMAR0RYAEtF
        VwBVSVkATkxkAE5OZwBAVoAAQVV9AD1GYgBCUHQARl+OAExbhQBMWoIAUWORAE9mmABVa50AVW6jAE9i
        jwBTbaMAUW+nAExpnwBAaKMARmKYAEJkmgBDaKAAQmehAEt4vQBWbqIASmmgAFBxrQBRa6EAU3GqAFZz
        rAApXJkAMFmSACtfngArabUAKW29AChuvwAobr8AK26+ADd3yAA2ZKMAOGipADdrsAA7croAN2OeAEBy
        uAA9dL4APXbCAEV5xABCeMQAMnLCAD190AA6gtkAOX3TAEB8ywApb8IAMILjADGE5QAzhuYANHzVADSA
        3QA0g+EAP3vJAEdyswAuhOgAK4fvAC2E6QAshusALIbtACyH7QAsh+4AK4nyAC2I8AApiPIAKonyACqJ
        8wApifQAKYr1ACmK9QAqifQAXkRJAFpHUgBRQ08AUkNQAFtMWgBUTWIAXVBiAFdSagBXWXgAVV2DAGFz
        pwBnbZQAZEhOAF5cegBvXnQAa2uSAGVrkwBsaIsAamyTAFlqmQBuQTsAZkRIAHZIQgCAT00AfF9tAHRk
        fAB0ZX0AeGZ+AG5rkQB8QTIAdEE3AHdkegBrbZYAhVpbAIhdZACKSTkAgEAvAI5aWQCKWFcAbT40AH1M
        RAB9YnIAcEVAAH1SUwCNSTwAglxiAIVUUwCGUUsAXD0/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuLi4uLi4sQXIuLi4uLi4uLi4uLi4uLBB+Li4uLi4uLi4uLi4uL
        iwMDi4uLi4uLi4sdH4uLi4s+OYuLi4sQH4uLCBMki4uLAxCLi2YrH1yLi4sMWQgIXFlZXBATWQiLi4uL
        i1xNWTpZWStZNouLi4uLi4uLSVkSDh9JWUmLi4uLCmYQXEEDNllZSUk+XBBcbT8XTSRZMzdZWUk/WRBZ
        Hx2Li4uLHzQdRE1JMQCLXIuLi4uLi21ZPzNJRVlci4uLi4uLi2ZND1xZRAgOTVyLi4uLi4sHAIuLABCL
        ixEVi4uLi4uLi4uLiwAQi4uLi4uLi4uLi4uLi4tcCIuLi4uLi4v+fwAA/n8AAP5/AACeeQAAjmEAAMAD
        AADgDwAA8A8AAAAAAAAAAAAA8AsAAPAPAADgBwAA5mcAAP5/AAD+fwAAKAAAACAAAABAAAAAAQAgAAAA
        AAAAEAAAEgsAABILAAAAAAAAAAAAAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAd0U9FD8oIqhLNDOSd0xLC39SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgBOPERyJ3LH/idwwf9mPzlLf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAFB0tnwqivT/Kor0/2hlhFR/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAfl1qLjSC3ug8gtjVf2BuFn9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgBdMileJzJD8C04
        TuVsPjVCf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAIZDLw9mPzlLd0U9FH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAC5U
        huMqivT/Kor0/z9XhL5/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB8Rz0cZj85S3dM
        Swt/UlIAf1JSAH9SUgB/UlIATTg9kSRRh/44Q17Jf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB3TEsLMoXl7iqK9P8qivT/QX3Myn9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAd0U9FCky
        ROMkUYf+YEVKaX9SUgB/UlIAf1JSAH9SUgBFeMCtKor0/y1+3PV3RT0Ud0U9FH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgBFesS8Kor0/yqK9P9Xdq6Vf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAd0xLC3dF
        PRRrPjcyLYPm/iqK9P9db6CFf1JSAH9SUgB/UlIAf1JSAGhxm2Ishuz/PILY1UQxMqAmOVT0NTtQyHxH
        PRx/UlIAf1JSAH9SUgB/UlIAf1JSAHxcaDQvXpjmOV+W0XRaaR9/UlIAf1JSAH9SUgB/UlIAf1JSAGs+
        NzIsLDXaJjta81JIWo4ziOrsMInu8X1icj9/UlIAf1JSAH9SUgB/UlIAf1JSAGxumSNtXHMlK2y58iqK
        9P8rf+D/VU5jhX9SUgB/UlIAf1JSAH9SUgB/PyosJzBB6CVZlv8lWZb/MkFf13dFPRR/UlIAf1JSAH9S
        UgB/UlIAQUFVri2D5v4qivT/Nmuv2GxrlB1sa5Qdf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH1h
        chIwiOzxKor0/yqK9P9QbaSUd0U9FGtAOTxvQz8hf1JSAEA+UJ0shuz/Kor0/yqK9P8tg+b+YE5ddX9S
        UgBtPjUsa0A5PIZDLw9FesS8Kor0/yqK9P87gdraf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAFZ2s5YqivT/Kor0/1VXdpEnMEHoI0x9/idFbvVXQUh9QHCztiqK9P8qivT/Kor0/yqK
        9P9TZpeSQCsnniM+YPojTH3+MD9d2U9qn6MqivT/Kor0/2dumG9/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAG9ukj5wYXo7OEVjsyyG7P8qivT/Kor0/yhnsPo/crnNKor0/yqK
        9P8qivT/Kor0/zxbjMgmZK3+Kor0/yqK9P8tg+b+U1RwjHBrj0Jxa44zf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgA7dcPHKor0/yqK9P8qivT/Kor0/1xm
        jogwg+P1Kor0/yqK9P83hOLhU2SQlSqK9P8qivT/Kor0/yqK9P9OcKyff1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAEt7wa4qivT/Kor0/yqK
        9P8qivT/Y197U15PYm8pW5j3Ll2Z7GJYcVJcapZ1Kor0/yqK9P8qivT/Kor0/11voIV/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB3TEsLV0tdeyyG
        7P8qivT/Kor0/ziA2N9ANTu3I0h1/iZkrf4mZK3+JFGH/klRcKkyheXuKor0/yqK9P8sft39ZVBcW39S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAbj41G3dFPRR/UlIAVzg2W0M9Tot+WWAjf1JSADUt
        MsIlT4L8J2Ck/ChnsfxacKSEV0tdeydos/4riO//K4jv/yuI7/8shuz/KWm2/mNZcmROaZ6eJleT/SZX
        k/0lU4z9RkdcoH9SUgBmOjE5Qz1Oi2lISUV/UlIAbj41G3dFPRQpN0/qLEhx6GtAOTwnTHv2KWm2/i9Q
        f+B4RDc7J3LH/iuI7/8shuz/LH7d/WBOXXVLV3ujK4jv/yuI7/8riO//K4jv/yuI7/8shuz/SlV3ekg8
        R5wsft39K4jv/yyG7P8uccH1bT41LCY7WvMqaLP8MViN4Gw+NUImOVT0O0lpyDCD4/Utg+b+YFl1cS2D
        5v4shuz/LH7d/WNfe1Mshuz/K4jv/yyG7P8shuz/UmibkU1ysakriO//K4jv/yyG7P8shuz/LIbs/yyG
        7P9EdbqAQG6yuSuI7/8shuz/LIbs/y2D5v5pXHRTLYPm/iyG7P83gNvjVU5jhS2D5v4+e8zZX3GjfjuB
        2tp8XGg0S3vBriyG7P80g+HtfllgIzeE4uEshuz/LIbs/yyG7P9Za5x8XW+ghSyG7P8shuz/LIbs/yyG
        7P8shuz/LIbs/2JpkV9Md7ykLIbs/yyG7P8shuz/RXvGxXxcaDQtg+b+LIbs/1ZyrIpoZYRUO4Ha2m9n
        hF1/UlIAf1JSAH9SUgB3TEsLZHCiQnFqjCd/UlIAdmaDNUF9zMowg+P1KXHF/yxJc+NEVHm0MIPj9SyG
        7P8shuz/LIbs/yyG7P8xec7uPztLtCtMeussft39MIPj9Ul7xrd+WWAjf1JSAHFrjjNkcKE5f1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAEg8R5wpbbz/LH7d/Slx
        xf9EWoa4QH/RxyyG7P8tg+b+SXrEtTU/WM0pbbz/LH7d/Sdyx/5RVndzf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAT2qfoyyG
        7P8shuz/LIbs/0JopLZGNj2bJU+C/CZXk/1XS117OGyy3iyG7P8shuz/LIbs/1lrnHx/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAd0xLC1FI
        W1NMa6OrLIbs/y2D5v4tg+b+QWysyideofwtg+b+LYPm/i1nr/I+e8zZLIbs/yyG7P8tg+b+SWGRkF9Q
        Y0l/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgBSMi9kJVmW/yZgpv47dMDZMIPj9TeA2+NfapRlLYPm/i2D5v4tg+b+MIPj9WtojGA0g+HtMIPj9TZh
        nN0jTH3+JmCm/nlLRj5/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAd0xLC1pdfn0tg+b+LYPm/mhlhFR/YG4Wd0xLC4ZDLw83gNvjLYPm/i2D5v5Fe8bFf1JSAIZD
        Lw99YXISTl6IfS2D5v4tg+b+bFpvWndMSwt/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgBAOkibJ2Ck/DF91/QygeD0fFxoNH9SUgB/UlIAf1JSAHBhejsqaLP8NHHA635Z
        YCN/UlIAf1JSAH9SUgBpa5JULYPm/i5xwfUlT4L8YE5ddX9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAE5pnp4rf+D/YWSKTX1hchJ/UlIAf1JSAH9SUgB/UlIAaT48WClp
        tv4pccX/W0pXMX9SUgB/UlIAf1JSAH9SUgB/YG4WYFx7cy2D5v5jaJJzf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAfllgI1ZyrIp/YG4Wf1JSAH9SUgB/UlIAf1JSAH9S
        UgBpXHRTLYPm/i2D5v5lZIMuf1JSAH9SUgB/UlIAf1JSAH9SUgCEWl4qVnKsindFPRR/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAIZDLw8yY6XmQ22vxn9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAd0xLCzBpsehBbKzKf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAW26ijmNoknN/UlIAf1JSAH9SUgB/UlIAf1JSAH9S
        UgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgB/UlIAf1JSAH9SUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>